library(tidyverse)
library(readxl)
library(extrafont)

loadfonts(device = "win")

theme_ef <- function () { 
  theme_minimal(base_size=12) %+replace%
    theme(
      axis.title = element_blank(),
      title = element_blank(),
      # axis.text.x = element_blank(),
      # panel.grid = element_blank(),
      strip.text = element_text(family = "FiraGO", face="bold", size = 14),
      text = element_text(family= "FiraGO"),
      plot.title = element_text(size=14, face="bold", family="FiraGO", hjust = 0),
      plot.subtitle = element_text(size=12, family="FiraGO", hjust=0),
      axis.text = element_text(size=12, family="FiraGO", color = "black"),
      legend.position = "none"
    )
}


# init <- read_excel("money-transfers-by-countries-geo.xlsx")

init <- read_excel("Table_2.xlsx") |> 
  slice(3:nrow())

months <- c(rep(1:12, each=2, 11), rep(1, each=2, 1))

years <- c(rep(2012:2022, each=2, 12), rep(2023, each = 2, 1)) %>% sort()

type <- rep(c("in", "out"), 126)

names <- paste0(type, "-", months, "-01-", years) %>%unlist()

names <- append ("country", names)

names(init) <- names

eu_schengen <- c("ავსტრია", "ბელგია", "გერმანია", "დანია", "ესპანეთი", "ესტონეთი", "იტალია", "ლატვია", "ლიტვა", "ლუქსემბურგი", "მალტა", "ნიდერლანდები", "პოლონეთი", "პორტუგალია", "საბერძნეთი", "საფრანგეთი", "სლოვენია", "სლოვაკეთი", "უნგრეთი", "ფინეთი", "შვედეთი", "ჩეხეთის რესპუბლიკა", "ისლანდია", "ლიხტენშტეინი", "ნორვეგია", "შვეიცარია") %>%
  data.frame() %>%
  setNames("country") %>%
  mutate(
    schengen_status = "Schengen zone"
  )

init %>%
  slice(8:n())%>%
  setNames(names) %>%
  pivot_longer(-country, names_to = "group", values_to = "dollar_amount") %>%
  filter(grepl("in-", group)) %>%
  mutate(
    group = str_replace_all(group, "in-", ""),
    date = lubridate::mdy(group),
  ) %>%
  separate(group, c("mo", "da", "year"), "-") %>%
  left_join(
    eu_schengen, by = c("country")
  ) %>%
  mutate(
    schengen_status = ifelse(is.na(schengen_status), "Other countries", schengen_status),
    schengen_status = ifelse(country == "რუსეთის ფედერაცია", "Russia", schengen_status),
    dollar_amount = as.numeric(dollar_amount),
    schengen_status = factor(schengen_status, levels = c("Schengen zone", "Russia", "Other countries")),
  ) -> remit_in

remit_in %>%
  group_by(date, schengen_status) %>%
  summarize(
    dollar_in = sum(dollar_amount, na.rm= T)
  ) %>%
  mutate(
    date = as.Date(date),
  ) %>%
  ggplot(aes(date, dollar_in, group = schengen_status, color = schengen_status))+
  geom_line(size = 2)+
  scale_color_manual(values = c("#3d405b", "#e07a5f", "#1b998b", ""))+
  # geom_smooth(method = "gam")+
  geom_vline(xintercept=as.Date("2017-03-28"),
             color="grey", linetype = "longdash")+
  geom_vline(xintercept=as.Date("2022-02-24"),
             color="grey", linetype = "longdash")+
  geom_vline(xintercept=as.Date("2022-09-21"),
             color="grey", linetype = "longdash")+
  scale_y_continuous(labels = scales::comma)+
  scale_x_date(date_labels = "%Y", breaks = "1 year")+
  annotate("text", x=as.Date("2017-03-28"), y=60000, label="Georgia granted visa-free regime\nwith the EU/Schengen countries", family = "FiraGO", angle=90)+
  annotate("text", x=as.Date("2022-02-24"), y=60000, label="Russia invades Ukraine", family = "FiraGO", angle=90)+
  annotate("text", x=as.Date("2022-09-21"), y=60000, label="Russia announces 'partial mobilization'", family = "FiraGO", angle=90)+
  theme_ef()+
  theme(
    legend.position = "bottom"
  )

ggsave("remit_geo.png", device = "png", height=5, width=13)  

remit_in %>%
  group_by(date, schengen_status) %>%
  summarize(
    dollar_in = sum(dollar_amount, na.rm= T)
  ) %>%
  mutate(
    date = as.Date(date),
  ) %>%
  ungroup()%>%
  ggplot(aes(date, dollar_in, fill = schengen_status))+
  geom_area(position="fill")+
  geom_vline(xintercept=as.Date("2017-03-28"),
             color="grey", linetype = "longdash")+
  geom_vline(xintercept=as.Date("2022-02-24"),
             color="grey", linetype = "longdash")+
  geom_vline(xintercept=as.Date("2022-09-21"),
             color="grey", linetype = "longdash")+
  scale_y_continuous(labels = scales::percent)+
  scale_fill_manual(values = c("#3d405b", "#e07a5f", "#1b998b", ""))+
  scale_x_date(date_labels = "%Y", breaks = "1 year")+
  annotate("text", x=as.Date("2017-03-28"), y=0.5, label="Georgia granted visa-free regime\nwith the EU/Schengen countries", family = "FiraGO", angle=90, color = "white")+
  annotate("text", x=as.Date("2022-02-24"), y=0.5, label="Russia invades Ukraine", family = "FiraGO", angle=90)+
  annotate("text", x=as.Date("2022-09-21"), y=0.5, label="Russia announces 'partial mobilization'", family = "FiraGO", angle=90)+
  
  theme_ef()+
  theme(
    legend.position = "bottom"
  )

ggsave("remit_geo_share.png", device = "png", height=5, width=13)  

remit_in %>%
  filter(year >= 2022) %>%
  group_by(date, schengen_status) %>%
  summarize(
    dollar_in = sum(dollar_amount, na.rm= T)
  ) %>%
  mutate(
    date = as.Date(date),
    # cutoff = ifelse(date >= as.Date("2017-03-28"), 1, 0)
    cutoff = ifelse(date >= as.Date("2021-01-01"), 1, 0)
  ) %>%
  ungroup() %>%
  group_by(cutoff, schengen_status)%>%
  summarize(
    dollar_in = sum(dollar_in)
  ) 


### average size

avgsize <- readxl::read_excel("Table.xlsx")

avgsize <- avgsize[, order(ncol(avgsize): 2)]

avgsize %>%
  relocate(`...1`) %>%
  setNames(names) -> avgsize


avgsize %>%
  slice(3:n())%>%
  setNames(names) %>%
  pivot_longer(-country, names_to = "group", values_to = "dollar_amount") %>%
  filter(grepl("in-", group)) %>%
  mutate(
    group = str_replace_all(group, "in-", ""),
    date = lubridate::mdy(group),
  ) %>%
  separate(group, c("mo", "da", "year"), "-") %>%
  left_join(
    eu_schengen, by = c("country")
  ) %>%
  mutate(
    schengen_status = ifelse(is.na(schengen_status), "Other countries", schengen_status),
    schengen_status = ifelse(country == "რუსეთის ფედერაცია", "Russia", schengen_status),
    dollar_amount = as.numeric(dollar_amount),
    schengen_status = factor(schengen_status, levels = c("Schengen zone", "Russia", "Other countries")),
  ) -> avgsize_in

avgsize_in %>%
  group_by(date, schengen_status) %>% 
  summarize(
    dollar_in = median(dollar_amount, na.rm= T)
  ) %>%
  mutate(
    date = as.Date(date),
  ) %>%
  ggplot(aes(date, dollar_in, group = schengen_status, color = schengen_status))+
  geom_line(size = 2)+
  scale_color_manual(values = c("#3d405b", "#e07a5f", "#1b998b", ""))+
  geom_vline(xintercept=as.Date("2017-03-28"),
             color="grey", linetype = "longdash")+
  geom_vline(xintercept=as.Date("2022-02-24"),
             color="grey", linetype = "longdash")+
  geom_vline(xintercept=as.Date("2022-09-21"),
             color="grey", linetype = "longdash")+
  scale_y_continuous(labels = scales::comma)+
  scale_x_date(date_labels = "%Y", breaks = "1 year")+
  annotate("text", x=as.Date("2017-03-28"), y=2000, label="Georgia granted visa-free regime\nwith the EU/Schengen countries", family = "FiraGO", angle=90)+
  annotate("text", x=as.Date("2022-02-24"), y=2000, label="Russia invades Ukraine", family = "FiraGO", angle=90)+
  annotate("text", x=as.Date("2022-09-21"), y=2000, label="Russia announces 'partial mobilization'", family = "FiraGO", angle=90)+
  theme_ef()+
  theme(
    legend.position = "bottom"
  )

avgsize_in %>%
  group_by(date, schengen_status) %>% 
  summarize(
    dollar_size = median(dollar_amount, na.rm= T)
  ) %>%
  mutate(
    date = as.Date(date),
  ) -> remit_size

remit_in %>%
  group_by(date, schengen_status) %>%
  summarize(
    dollar_in = sum(dollar_amount, na.rm= T)
  ) %>%
  mutate(
    date = as.Date(date),
  ) -> remit_total

remit_total %>%
  left_join(remit_size, by = c("date", "schengen_status")) %>%
  mutate(
    pop_size = dollar_in*1000/dollar_size,
  ) -> pop_size


pop_size %>%
  ggplot(aes(date, pop_size, group = schengen_status, color = schengen_status))+
  geom_line(size = 2)+
  # geom_smooth(method = "gam")+
  geom_vline(xintercept=as.Date("2017-03-28"),
             color="grey", linetype = "longdash")+
  geom_vline(xintercept=as.Date("2022-02-24"),
             color="grey", linetype = "longdash")+
  geom_vline(xintercept=as.Date("2022-09-21"),
             color="grey", linetype = "longdash")+
  scale_y_continuous(labels = scales::comma, limits = c(0, 500000))+
  scale_x_date(date_labels = "%Y", breaks = "1 year")+
  scale_color_manual(values = c("#3d405b", "#e07a5f", "#1b998b", ""))+
    annotate("text", x=as.Date("2017-03-28"), y=300000, label="Georgia granted visa-free regime\nwith the EU/Schengen countries", family = "FiraGO", angle=90)+
  annotate("text", x=as.Date("2022-02-24"), y=300000, label="Russia invades Ukraine", family = "FiraGO", angle=90)+
  annotate("text", x=as.Date("2022-09-21"), y=300000, label="Russia announces 'partial mobilization'", family = "FiraGO", angle=90)+
  theme_ef()+
  theme(
    legend.position = "bottom"
  )

####

library(forecast)

remit_in %>%
  group_by(date, schengen_status) %>%
  summarize(
    dollar_in = sum(dollar_amount, na.rm= T)
  ) %>%
  mutate(
    date = as.Date(date),
  ) -> data_for_analysis


modfit <- auto.arima(data_for_analysis$dollar_in[data_for_analysis$schengen_status == "Schengen zone"])

predict(modfit, data=data_for_analysis$dollar_in[data_for_analysis$schengen_status == "Schengen zone"])
